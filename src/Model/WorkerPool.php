<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace Flownative\Harbor\Api\Model;

class WorkerPool
{
    /**
     * @var array
     */
    protected $initialized = [];

    public function isInitialized($property): bool
    {
        return array_key_exists($property, $this->initialized);
    }
    /**
     * the process id of jobservice.
     *
     * @var int|null
     */
    protected $pid;
    /**
     * the id of the worker pool.
     *
     * @var string|null
     */
    protected $workerPoolId;
    /**
     * The start time of the work pool.
     *
     * @var \DateTimeInterface|null
     */
    protected $startAt;
    /**
     * The heartbeat time of the work pool.
     *
     * @var \DateTimeInterface|null
     */
    protected $heartbeatAt;
    /**
     * The concurrency of the work pool.
     *
     * @var int|null
     */
    protected $concurrency;
    /**
     * The host of the work pool.
     *
     * @var string|null
     */
    protected $host;

    /**
     * the process id of jobservice.
     */
    public function getPid(): ?int
    {
        return $this->pid;
    }

    /**
     * the process id of jobservice.
     */
    public function setPid(?int $pid): self
    {
        $this->initialized['pid'] = true;
        $this->pid = $pid;

        return $this;
    }

    /**
     * the id of the worker pool.
     */
    public function getWorkerPoolId(): ?string
    {
        return $this->workerPoolId;
    }

    /**
     * the id of the worker pool.
     */
    public function setWorkerPoolId(?string $workerPoolId): self
    {
        $this->initialized['workerPoolId'] = true;
        $this->workerPoolId = $workerPoolId;

        return $this;
    }

    /**
     * The start time of the work pool.
     */
    public function getStartAt(): ?\DateTimeInterface
    {
        return $this->startAt;
    }

    /**
     * The start time of the work pool.
     */
    public function setStartAt(?\DateTimeInterface $startAt): self
    {
        $this->initialized['startAt'] = true;
        $this->startAt = $startAt;

        return $this;
    }

    /**
     * The heartbeat time of the work pool.
     */
    public function getHeartbeatAt(): ?\DateTimeInterface
    {
        return $this->heartbeatAt;
    }

    /**
     * The heartbeat time of the work pool.
     */
    public function setHeartbeatAt(?\DateTimeInterface $heartbeatAt): self
    {
        $this->initialized['heartbeatAt'] = true;
        $this->heartbeatAt = $heartbeatAt;

        return $this;
    }

    /**
     * The concurrency of the work pool.
     */
    public function getConcurrency(): ?int
    {
        return $this->concurrency;
    }

    /**
     * The concurrency of the work pool.
     */
    public function setConcurrency(?int $concurrency): self
    {
        $this->initialized['concurrency'] = true;
        $this->concurrency = $concurrency;

        return $this;
    }

    /**
     * The host of the work pool.
     */
    public function getHost(): ?string
    {
        return $this->host;
    }

    /**
     * The host of the work pool.
     */
    public function setHost(?string $host): self
    {
        $this->initialized['host'] = true;
        $this->host = $host;

        return $this;
    }
}
