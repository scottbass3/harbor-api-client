<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace Flownative\Harbor\Api\Model;

class LdapConf
{
    /**
     * @var array
     */
    protected $initialized = [];

    public function isInitialized($property): bool
    {
        return array_key_exists($property, $this->initialized);
    }
    /**
     * The url of ldap service.
     *
     * @var string|null
     */
    protected $ldapUrl;
    /**
     * The search dn of ldap service.
     *
     * @var string|null
     */
    protected $ldapSearchDn;
    /**
     * The search password of ldap service.
     *
     * @var string|null
     */
    protected $ldapSearchPassword;
    /**
     * The base dn of ldap service.
     *
     * @var string|null
     */
    protected $ldapBaseDn;
    /**
     * The serach filter of ldap service.
     *
     * @var string|null
     */
    protected $ldapFilter;
    /**
     * The serach uid from ldap service attributes.
     *
     * @var string|null
     */
    protected $ldapUid;
    /**
     * The serach scope of ldap service.
     *
     * @var int|null
     */
    protected $ldapScope;
    /**
     * The connect timeout of ldap service(second).
     *
     * @var int|null
     */
    protected $ldapConnectionTimeout;
    /**
     * Verify Ldap server certificate.
     *
     * @var bool|null
     */
    protected $ldapVerifyCert;

    /**
     * The url of ldap service.
     */
    public function getLdapUrl(): ?string
    {
        return $this->ldapUrl;
    }

    /**
     * The url of ldap service.
     */
    public function setLdapUrl(?string $ldapUrl): self
    {
        $this->initialized['ldapUrl'] = true;
        $this->ldapUrl = $ldapUrl;

        return $this;
    }

    /**
     * The search dn of ldap service.
     */
    public function getLdapSearchDn(): ?string
    {
        return $this->ldapSearchDn;
    }

    /**
     * The search dn of ldap service.
     */
    public function setLdapSearchDn(?string $ldapSearchDn): self
    {
        $this->initialized['ldapSearchDn'] = true;
        $this->ldapSearchDn = $ldapSearchDn;

        return $this;
    }

    /**
     * The search password of ldap service.
     */
    public function getLdapSearchPassword(): ?string
    {
        return $this->ldapSearchPassword;
    }

    /**
     * The search password of ldap service.
     */
    public function setLdapSearchPassword(?string $ldapSearchPassword): self
    {
        $this->initialized['ldapSearchPassword'] = true;
        $this->ldapSearchPassword = $ldapSearchPassword;

        return $this;
    }

    /**
     * The base dn of ldap service.
     */
    public function getLdapBaseDn(): ?string
    {
        return $this->ldapBaseDn;
    }

    /**
     * The base dn of ldap service.
     */
    public function setLdapBaseDn(?string $ldapBaseDn): self
    {
        $this->initialized['ldapBaseDn'] = true;
        $this->ldapBaseDn = $ldapBaseDn;

        return $this;
    }

    /**
     * The serach filter of ldap service.
     */
    public function getLdapFilter(): ?string
    {
        return $this->ldapFilter;
    }

    /**
     * The serach filter of ldap service.
     */
    public function setLdapFilter(?string $ldapFilter): self
    {
        $this->initialized['ldapFilter'] = true;
        $this->ldapFilter = $ldapFilter;

        return $this;
    }

    /**
     * The serach uid from ldap service attributes.
     */
    public function getLdapUid(): ?string
    {
        return $this->ldapUid;
    }

    /**
     * The serach uid from ldap service attributes.
     */
    public function setLdapUid(?string $ldapUid): self
    {
        $this->initialized['ldapUid'] = true;
        $this->ldapUid = $ldapUid;

        return $this;
    }

    /**
     * The serach scope of ldap service.
     */
    public function getLdapScope(): ?int
    {
        return $this->ldapScope;
    }

    /**
     * The serach scope of ldap service.
     */
    public function setLdapScope(?int $ldapScope): self
    {
        $this->initialized['ldapScope'] = true;
        $this->ldapScope = $ldapScope;

        return $this;
    }

    /**
     * The connect timeout of ldap service(second).
     */
    public function getLdapConnectionTimeout(): ?int
    {
        return $this->ldapConnectionTimeout;
    }

    /**
     * The connect timeout of ldap service(second).
     */
    public function setLdapConnectionTimeout(?int $ldapConnectionTimeout): self
    {
        $this->initialized['ldapConnectionTimeout'] = true;
        $this->ldapConnectionTimeout = $ldapConnectionTimeout;

        return $this;
    }

    /**
     * Verify Ldap server certificate.
     */
    public function getLdapVerifyCert(): ?bool
    {
        return $this->ldapVerifyCert;
    }

    /**
     * Verify Ldap server certificate.
     */
    public function setLdapVerifyCert(?bool $ldapVerifyCert): self
    {
        $this->initialized['ldapVerifyCert'] = true;
        $this->ldapVerifyCert = $ldapVerifyCert;

        return $this;
    }
}
