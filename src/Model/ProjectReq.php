<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace Scottbass3\Harbor\Api\Model;

class ProjectReq
{
    /**
     * @var array
     */
    protected $initialized = [];

    public function isInitialized($property): bool
    {
        return array_key_exists($property, $this->initialized);
    }
    /**
     * The name of the project.
     *
     * @var string|null
     */
    protected $projectName;
    /**
     * deprecated, reserved for project creation in replication.
     *
     * @var bool|null
     */
    protected $public;
    /**
     * @var ProjectMetadata|null
     */
    protected $metadata;
    /**
     * The CVE Allowlist for system or project.
     *
     * @var CVEAllowlist|null
     */
    protected $cveAllowlist;
    /**
     * The storage quota of the project.
     *
     * @var int|null
     */
    protected $storageLimit;
    /**
     * The ID of referenced registry when creating the proxy cache project.
     *
     * @var int|null
     */
    protected $registryId;

    /**
     * The name of the project.
     */
    public function getProjectName(): ?string
    {
        return $this->projectName;
    }

    /**
     * The name of the project.
     */
    public function setProjectName(?string $projectName): self
    {
        $this->initialized['projectName'] = true;
        $this->projectName = $projectName;

        return $this;
    }

    /**
     * deprecated, reserved for project creation in replication.
     */
    public function getPublic(): ?bool
    {
        return $this->public;
    }

    /**
     * deprecated, reserved for project creation in replication.
     */
    public function setPublic(?bool $public): self
    {
        $this->initialized['public'] = true;
        $this->public = $public;

        return $this;
    }

    public function getMetadata(): ?ProjectMetadata
    {
        return $this->metadata;
    }

    public function setMetadata(?ProjectMetadata $metadata): self
    {
        $this->initialized['metadata'] = true;
        $this->metadata = $metadata;

        return $this;
    }

    /**
     * The CVE Allowlist for system or project.
     */
    public function getCveAllowlist(): ?CVEAllowlist
    {
        return $this->cveAllowlist;
    }

    /**
     * The CVE Allowlist for system or project.
     */
    public function setCveAllowlist(?CVEAllowlist $cveAllowlist): self
    {
        $this->initialized['cveAllowlist'] = true;
        $this->cveAllowlist = $cveAllowlist;

        return $this;
    }

    /**
     * The storage quota of the project.
     */
    public function getStorageLimit(): ?int
    {
        return $this->storageLimit;
    }

    /**
     * The storage quota of the project.
     */
    public function setStorageLimit(?int $storageLimit): self
    {
        $this->initialized['storageLimit'] = true;
        $this->storageLimit = $storageLimit;

        return $this;
    }

    /**
     * The ID of referenced registry when creating the proxy cache project.
     */
    public function getRegistryId(): ?int
    {
        return $this->registryId;
    }

    /**
     * The ID of referenced registry when creating the proxy cache project.
     */
    public function setRegistryId(?int $registryId): self
    {
        $this->initialized['registryId'] = true;
        $this->registryId = $registryId;

        return $this;
    }
}
