<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace Scottbass3\Harbor\Api\Model;

class WebhookPolicy
{
    /**
     * @var array
     */
    protected $initialized = [];

    public function isInitialized($property): bool
    {
        return array_key_exists($property, $this->initialized);
    }
    /**
     * The webhook policy ID.
     *
     * @var int|null
     */
    protected $id;
    /**
     * The name of webhook policy.
     *
     * @var string|null
     */
    protected $name;
    /**
     * The description of webhook policy.
     *
     * @var string|null
     */
    protected $description;
    /**
     * The project ID of webhook policy.
     *
     * @var int|null
     */
    protected $projectId;
    /**
     * @var list<WebhookTargetObject>|null
     */
    protected $targets;
    /**
     * @var list<string>|null
     */
    protected $eventTypes;
    /**
     * The creator of the webhook policy.
     *
     * @var string|null
     */
    protected $creator;
    /**
     * The create time of the webhook policy.
     *
     * @var \DateTimeInterface|null
     */
    protected $creationTime;
    /**
     * The update time of the webhook policy.
     *
     * @var \DateTimeInterface|null
     */
    protected $updateTime;
    /**
     * Whether the webhook policy is enabled or not.
     *
     * @var bool|null
     */
    protected $enabled;

    /**
     * The webhook policy ID.
     */
    public function getId(): ?int
    {
        return $this->id;
    }

    /**
     * The webhook policy ID.
     */
    public function setId(?int $id): self
    {
        $this->initialized['id'] = true;
        $this->id = $id;

        return $this;
    }

    /**
     * The name of webhook policy.
     */
    public function getName(): ?string
    {
        return $this->name;
    }

    /**
     * The name of webhook policy.
     */
    public function setName(?string $name): self
    {
        $this->initialized['name'] = true;
        $this->name = $name;

        return $this;
    }

    /**
     * The description of webhook policy.
     */
    public function getDescription(): ?string
    {
        return $this->description;
    }

    /**
     * The description of webhook policy.
     */
    public function setDescription(?string $description): self
    {
        $this->initialized['description'] = true;
        $this->description = $description;

        return $this;
    }

    /**
     * The project ID of webhook policy.
     */
    public function getProjectId(): ?int
    {
        return $this->projectId;
    }

    /**
     * The project ID of webhook policy.
     */
    public function setProjectId(?int $projectId): self
    {
        $this->initialized['projectId'] = true;
        $this->projectId = $projectId;

        return $this;
    }

    /**
     * @return list<WebhookTargetObject>|null
     */
    public function getTargets(): ?array
    {
        return $this->targets;
    }

    /**
     * @param list<WebhookTargetObject>|null $targets
     */
    public function setTargets(?array $targets): self
    {
        $this->initialized['targets'] = true;
        $this->targets = $targets;

        return $this;
    }

    /**
     * @return list<string>|null
     */
    public function getEventTypes(): ?array
    {
        return $this->eventTypes;
    }

    /**
     * @param list<string>|null $eventTypes
     */
    public function setEventTypes(?array $eventTypes): self
    {
        $this->initialized['eventTypes'] = true;
        $this->eventTypes = $eventTypes;

        return $this;
    }

    /**
     * The creator of the webhook policy.
     */
    public function getCreator(): ?string
    {
        return $this->creator;
    }

    /**
     * The creator of the webhook policy.
     */
    public function setCreator(?string $creator): self
    {
        $this->initialized['creator'] = true;
        $this->creator = $creator;

        return $this;
    }

    /**
     * The create time of the webhook policy.
     */
    public function getCreationTime(): ?\DateTimeInterface
    {
        return $this->creationTime;
    }

    /**
     * The create time of the webhook policy.
     */
    public function setCreationTime(?\DateTimeInterface $creationTime): self
    {
        $this->initialized['creationTime'] = true;
        $this->creationTime = $creationTime;

        return $this;
    }

    /**
     * The update time of the webhook policy.
     */
    public function getUpdateTime(): ?\DateTimeInterface
    {
        return $this->updateTime;
    }

    /**
     * The update time of the webhook policy.
     */
    public function setUpdateTime(?\DateTimeInterface $updateTime): self
    {
        $this->initialized['updateTime'] = true;
        $this->updateTime = $updateTime;

        return $this;
    }

    /**
     * Whether the webhook policy is enabled or not.
     */
    public function getEnabled(): ?bool
    {
        return $this->enabled;
    }

    /**
     * Whether the webhook policy is enabled or not.
     */
    public function setEnabled(?bool $enabled): self
    {
        $this->initialized['enabled'] = true;
        $this->enabled = $enabled;

        return $this;
    }
}
