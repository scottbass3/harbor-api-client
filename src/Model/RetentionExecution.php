<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace Flownative\Harbor\Api\Model;

class RetentionExecution
{
    /**
     * @var array
     */
    protected $initialized = [];

    public function isInitialized($property): bool
    {
        return array_key_exists($property, $this->initialized);
    }
    /**
     * @var int|null
     */
    protected $id;
    /**
     * @var int|null
     */
    protected $policyId;
    /**
     * @var string|null
     */
    protected $startTime;
    /**
     * @var string|null
     */
    protected $endTime;
    /**
     * @var string|null
     */
    protected $status;
    /**
     * @var string|null
     */
    protected $trigger;
    /**
     * @var bool|null
     */
    protected $dryRun;

    public function getId(): ?int
    {
        return $this->id;
    }

    public function setId(?int $id): self
    {
        $this->initialized['id'] = true;
        $this->id = $id;

        return $this;
    }

    public function getPolicyId(): ?int
    {
        return $this->policyId;
    }

    public function setPolicyId(?int $policyId): self
    {
        $this->initialized['policyId'] = true;
        $this->policyId = $policyId;

        return $this;
    }

    public function getStartTime(): ?string
    {
        return $this->startTime;
    }

    public function setStartTime(?string $startTime): self
    {
        $this->initialized['startTime'] = true;
        $this->startTime = $startTime;

        return $this;
    }

    public function getEndTime(): ?string
    {
        return $this->endTime;
    }

    public function setEndTime(?string $endTime): self
    {
        $this->initialized['endTime'] = true;
        $this->endTime = $endTime;

        return $this;
    }

    public function getStatus(): ?string
    {
        return $this->status;
    }

    public function setStatus(?string $status): self
    {
        $this->initialized['status'] = true;
        $this->status = $status;

        return $this;
    }

    public function getTrigger(): ?string
    {
        return $this->trigger;
    }

    public function setTrigger(?string $trigger): self
    {
        $this->initialized['trigger'] = true;
        $this->trigger = $trigger;

        return $this;
    }

    public function getDryRun(): ?bool
    {
        return $this->dryRun;
    }

    public function setDryRun(?bool $dryRun): self
    {
        $this->initialized['dryRun'] = true;
        $this->dryRun = $dryRun;

        return $this;
    }
}
