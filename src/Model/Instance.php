<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace Scottbass3\Harbor\Api\Model;

class Instance
{
    /**
     * @var array
     */
    protected $initialized = [];

    public function isInitialized($property): bool
    {
        return array_key_exists($property, $this->initialized);
    }
    /**
     * Unique ID.
     *
     * @var int|null
     */
    protected $id;
    /**
     * Instance name.
     *
     * @var string|null
     */
    protected $name;
    /**
     * Description of instance.
     *
     * @var string|null
     */
    protected $description;
    /**
     * Based on which driver, identified by ID.
     *
     * @var string|null
     */
    protected $vendor;
    /**
     * The service endpoint of this instance.
     *
     * @var string|null
     */
    protected $endpoint;
    /**
     * The authentication way supported.
     *
     * @var string|null
     */
    protected $authMode;
    /**
     * The auth credential data if exists.
     *
     * @var array<string, string>|null
     */
    protected $authInfo;
    /**
     * The health status.
     *
     * @var string|null
     */
    protected $status;
    /**
     * Whether the instance is activated or not.
     *
     * @var bool|null
     */
    protected $enabled;
    /**
     * Whether the instance is default or not.
     *
     * @var bool|null
     */
    protected $default;
    /**
     * Whether the instance endpoint is insecure or not.
     *
     * @var bool|null
     */
    protected $insecure;
    /**
     * The timestamp of instance setting up.
     *
     * @var int|null
     */
    protected $setupTimestamp;

    /**
     * Unique ID.
     */
    public function getId(): ?int
    {
        return $this->id;
    }

    /**
     * Unique ID.
     */
    public function setId(?int $id): self
    {
        $this->initialized['id'] = true;
        $this->id = $id;

        return $this;
    }

    /**
     * Instance name.
     */
    public function getName(): ?string
    {
        return $this->name;
    }

    /**
     * Instance name.
     */
    public function setName(?string $name): self
    {
        $this->initialized['name'] = true;
        $this->name = $name;

        return $this;
    }

    /**
     * Description of instance.
     */
    public function getDescription(): ?string
    {
        return $this->description;
    }

    /**
     * Description of instance.
     */
    public function setDescription(?string $description): self
    {
        $this->initialized['description'] = true;
        $this->description = $description;

        return $this;
    }

    /**
     * Based on which driver, identified by ID.
     */
    public function getVendor(): ?string
    {
        return $this->vendor;
    }

    /**
     * Based on which driver, identified by ID.
     */
    public function setVendor(?string $vendor): self
    {
        $this->initialized['vendor'] = true;
        $this->vendor = $vendor;

        return $this;
    }

    /**
     * The service endpoint of this instance.
     */
    public function getEndpoint(): ?string
    {
        return $this->endpoint;
    }

    /**
     * The service endpoint of this instance.
     */
    public function setEndpoint(?string $endpoint): self
    {
        $this->initialized['endpoint'] = true;
        $this->endpoint = $endpoint;

        return $this;
    }

    /**
     * The authentication way supported.
     */
    public function getAuthMode(): ?string
    {
        return $this->authMode;
    }

    /**
     * The authentication way supported.
     */
    public function setAuthMode(?string $authMode): self
    {
        $this->initialized['authMode'] = true;
        $this->authMode = $authMode;

        return $this;
    }

    /**
     * The auth credential data if exists.
     *
     * @return array<string, string>|null
     */
    public function getAuthInfo(): ?iterable
    {
        return $this->authInfo;
    }

    /**
     * The auth credential data if exists.
     *
     * @param array<string, string>|null $authInfo
     */
    public function setAuthInfo(?iterable $authInfo): self
    {
        $this->initialized['authInfo'] = true;
        $this->authInfo = $authInfo;

        return $this;
    }

    /**
     * The health status.
     */
    public function getStatus(): ?string
    {
        return $this->status;
    }

    /**
     * The health status.
     */
    public function setStatus(?string $status): self
    {
        $this->initialized['status'] = true;
        $this->status = $status;

        return $this;
    }

    /**
     * Whether the instance is activated or not.
     */
    public function getEnabled(): ?bool
    {
        return $this->enabled;
    }

    /**
     * Whether the instance is activated or not.
     */
    public function setEnabled(?bool $enabled): self
    {
        $this->initialized['enabled'] = true;
        $this->enabled = $enabled;

        return $this;
    }

    /**
     * Whether the instance is default or not.
     */
    public function getDefault(): ?bool
    {
        return $this->default;
    }

    /**
     * Whether the instance is default or not.
     */
    public function setDefault(?bool $default): self
    {
        $this->initialized['default'] = true;
        $this->default = $default;

        return $this;
    }

    /**
     * Whether the instance endpoint is insecure or not.
     */
    public function getInsecure(): ?bool
    {
        return $this->insecure;
    }

    /**
     * Whether the instance endpoint is insecure or not.
     */
    public function setInsecure(?bool $insecure): self
    {
        $this->initialized['insecure'] = true;
        $this->insecure = $insecure;

        return $this;
    }

    /**
     * The timestamp of instance setting up.
     */
    public function getSetupTimestamp(): ?int
    {
        return $this->setupTimestamp;
    }

    /**
     * The timestamp of instance setting up.
     */
    public function setSetupTimestamp(?int $setupTimestamp): self
    {
        $this->initialized['setupTimestamp'] = true;
        $this->setupTimestamp = $setupTimestamp;

        return $this;
    }
}
