<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace Flownative\Harbor\Api\Model;

class ScanDataExportRequest
{
    /**
     * @var array
     */
    protected $initialized = [];

    public function isInitialized($property): bool
    {
        return array_key_exists($property, $this->initialized);
    }
    /**
     * Name of the scan data export job.
     *
     * @var string|null
     */
    protected $jobName;
    /**
     * A list of one or more projects for which to export the scan data, currently only one project is supported due to performance concerns, but define as array for extension in the future.
     *
     * @var list<int>|null
     */
    protected $projects;
    /**
     * A list of one or more labels for which to export the scan data, defaults to all if empty.
     *
     * @var list<int>|null
     */
    protected $labels;
    /**
     * A list of repositories for which to export the scan data, defaults to all if empty.
     *
     * @var string|null
     */
    protected $repositories;
    /**
     * CVE-IDs for which to export data. Multiple CVE-IDs can be specified by separating using ',' and enclosed between '{}'. Defaults to all if empty.
     *
     * @var string|null
     */
    protected $cveIds;
    /**
     * A list of tags enclosed within '{}'. Defaults to all if empty.
     *
     * @var string|null
     */
    protected $tags;

    /**
     * Name of the scan data export job.
     */
    public function getJobName(): ?string
    {
        return $this->jobName;
    }

    /**
     * Name of the scan data export job.
     */
    public function setJobName(?string $jobName): self
    {
        $this->initialized['jobName'] = true;
        $this->jobName = $jobName;

        return $this;
    }

    /**
     * A list of one or more projects for which to export the scan data, currently only one project is supported due to performance concerns, but define as array for extension in the future.
     *
     * @return list<int>|null
     */
    public function getProjects(): ?array
    {
        return $this->projects;
    }

    /**
     * A list of one or more projects for which to export the scan data, currently only one project is supported due to performance concerns, but define as array for extension in the future.
     *
     * @param list<int>|null $projects
     */
    public function setProjects(?array $projects): self
    {
        $this->initialized['projects'] = true;
        $this->projects = $projects;

        return $this;
    }

    /**
     * A list of one or more labels for which to export the scan data, defaults to all if empty.
     *
     * @return list<int>|null
     */
    public function getLabels(): ?array
    {
        return $this->labels;
    }

    /**
     * A list of one or more labels for which to export the scan data, defaults to all if empty.
     *
     * @param list<int>|null $labels
     */
    public function setLabels(?array $labels): self
    {
        $this->initialized['labels'] = true;
        $this->labels = $labels;

        return $this;
    }

    /**
     * A list of repositories for which to export the scan data, defaults to all if empty.
     */
    public function getRepositories(): ?string
    {
        return $this->repositories;
    }

    /**
     * A list of repositories for which to export the scan data, defaults to all if empty.
     */
    public function setRepositories(?string $repositories): self
    {
        $this->initialized['repositories'] = true;
        $this->repositories = $repositories;

        return $this;
    }

    /**
     * CVE-IDs for which to export data. Multiple CVE-IDs can be specified by separating using ',' and enclosed between '{}'. Defaults to all if empty.
     */
    public function getCveIds(): ?string
    {
        return $this->cveIds;
    }

    /**
     * CVE-IDs for which to export data. Multiple CVE-IDs can be specified by separating using ',' and enclosed between '{}'. Defaults to all if empty.
     */
    public function setCveIds(?string $cveIds): self
    {
        $this->initialized['cveIds'] = true;
        $this->cveIds = $cveIds;

        return $this;
    }

    /**
     * A list of tags enclosed within '{}'. Defaults to all if empty.
     */
    public function getTags(): ?string
    {
        return $this->tags;
    }

    /**
     * A list of tags enclosed within '{}'. Defaults to all if empty.
     */
    public function setTags(?string $tags): self
    {
        $this->initialized['tags'] = true;
        $this->tags = $tags;

        return $this;
    }
}
