<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace Flownative\Harbor\Api\Model;

class Execution
{
    /**
     * @var array
     */
    protected $initialized = [];

    public function isInitialized($property): bool
    {
        return array_key_exists($property, $this->initialized);
    }
    /**
     * The ID of execution.
     *
     * @var int|null
     */
    protected $id;
    /**
     * The vendor type of execution.
     *
     * @var string|null
     */
    protected $vendorType;
    /**
     * The vendor id of execution.
     *
     * @var int|null
     */
    protected $vendorId;
    /**
     * The status of execution.
     *
     * @var string|null
     */
    protected $status;
    /**
     * The status message of execution.
     *
     * @var string|null
     */
    protected $statusMessage;
    /**
     * @var Metrics|null
     */
    protected $metrics;
    /**
     * The trigger of execution.
     *
     * @var string|null
     */
    protected $trigger;
    /**
     * @var array<string, mixed>|null
     */
    protected $extraAttrs;
    /**
     * The start time of execution.
     *
     * @var string|null
     */
    protected $startTime;
    /**
     * The end time of execution.
     *
     * @var string|null
     */
    protected $endTime;

    /**
     * The ID of execution.
     */
    public function getId(): ?int
    {
        return $this->id;
    }

    /**
     * The ID of execution.
     */
    public function setId(?int $id): self
    {
        $this->initialized['id'] = true;
        $this->id = $id;

        return $this;
    }

    /**
     * The vendor type of execution.
     */
    public function getVendorType(): ?string
    {
        return $this->vendorType;
    }

    /**
     * The vendor type of execution.
     */
    public function setVendorType(?string $vendorType): self
    {
        $this->initialized['vendorType'] = true;
        $this->vendorType = $vendorType;

        return $this;
    }

    /**
     * The vendor id of execution.
     */
    public function getVendorId(): ?int
    {
        return $this->vendorId;
    }

    /**
     * The vendor id of execution.
     */
    public function setVendorId(?int $vendorId): self
    {
        $this->initialized['vendorId'] = true;
        $this->vendorId = $vendorId;

        return $this;
    }

    /**
     * The status of execution.
     */
    public function getStatus(): ?string
    {
        return $this->status;
    }

    /**
     * The status of execution.
     */
    public function setStatus(?string $status): self
    {
        $this->initialized['status'] = true;
        $this->status = $status;

        return $this;
    }

    /**
     * The status message of execution.
     */
    public function getStatusMessage(): ?string
    {
        return $this->statusMessage;
    }

    /**
     * The status message of execution.
     */
    public function setStatusMessage(?string $statusMessage): self
    {
        $this->initialized['statusMessage'] = true;
        $this->statusMessage = $statusMessage;

        return $this;
    }

    public function getMetrics(): ?Metrics
    {
        return $this->metrics;
    }

    public function setMetrics(?Metrics $metrics): self
    {
        $this->initialized['metrics'] = true;
        $this->metrics = $metrics;

        return $this;
    }

    /**
     * The trigger of execution.
     */
    public function getTrigger(): ?string
    {
        return $this->trigger;
    }

    /**
     * The trigger of execution.
     */
    public function setTrigger(?string $trigger): self
    {
        $this->initialized['trigger'] = true;
        $this->trigger = $trigger;

        return $this;
    }

    /**
     * @return array<string, mixed>|null
     */
    public function getExtraAttrs(): ?iterable
    {
        return $this->extraAttrs;
    }

    /**
     * @param array<string, mixed>|null $extraAttrs
     */
    public function setExtraAttrs(?iterable $extraAttrs): self
    {
        $this->initialized['extraAttrs'] = true;
        $this->extraAttrs = $extraAttrs;

        return $this;
    }

    /**
     * The start time of execution.
     */
    public function getStartTime(): ?string
    {
        return $this->startTime;
    }

    /**
     * The start time of execution.
     */
    public function setStartTime(?string $startTime): self
    {
        $this->initialized['startTime'] = true;
        $this->startTime = $startTime;

        return $this;
    }

    /**
     * The end time of execution.
     */
    public function getEndTime(): ?string
    {
        return $this->endTime;
    }

    /**
     * The end time of execution.
     */
    public function setEndTime(?string $endTime): self
    {
        $this->initialized['endTime'] = true;
        $this->endTime = $endTime;

        return $this;
    }
}
