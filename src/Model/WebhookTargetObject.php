<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace Flownative\Harbor\Api\Model;

class WebhookTargetObject
{
    /**
     * @var array
     */
    protected $initialized = [];

    public function isInitialized($property): bool
    {
        return array_key_exists($property, $this->initialized);
    }
    /**
     * The webhook target notify type.
     *
     * @var string|null
     */
    protected $type;
    /**
     * The webhook target address.
     *
     * @var string|null
     */
    protected $address;
    /**
     * The webhook auth header.
     *
     * @var string|null
     */
    protected $authHeader;
    /**
     * Whether or not to skip cert verify.
     *
     * @var bool|null
     */
    protected $skipCertVerify;
    /**
     * The type of webhook paylod format.
     *
     * @var string|null
     */
    protected $payloadFormat;

    /**
     * The webhook target notify type.
     */
    public function getType(): ?string
    {
        return $this->type;
    }

    /**
     * The webhook target notify type.
     */
    public function setType(?string $type): self
    {
        $this->initialized['type'] = true;
        $this->type = $type;

        return $this;
    }

    /**
     * The webhook target address.
     */
    public function getAddress(): ?string
    {
        return $this->address;
    }

    /**
     * The webhook target address.
     */
    public function setAddress(?string $address): self
    {
        $this->initialized['address'] = true;
        $this->address = $address;

        return $this;
    }

    /**
     * The webhook auth header.
     */
    public function getAuthHeader(): ?string
    {
        return $this->authHeader;
    }

    /**
     * The webhook auth header.
     */
    public function setAuthHeader(?string $authHeader): self
    {
        $this->initialized['authHeader'] = true;
        $this->authHeader = $authHeader;

        return $this;
    }

    /**
     * Whether or not to skip cert verify.
     */
    public function getSkipCertVerify(): ?bool
    {
        return $this->skipCertVerify;
    }

    /**
     * Whether or not to skip cert verify.
     */
    public function setSkipCertVerify(?bool $skipCertVerify): self
    {
        $this->initialized['skipCertVerify'] = true;
        $this->skipCertVerify = $skipCertVerify;

        return $this;
    }

    /**
     * The type of webhook paylod format.
     */
    public function getPayloadFormat(): ?string
    {
        return $this->payloadFormat;
    }

    /**
     * The type of webhook paylod format.
     */
    public function setPayloadFormat(?string $payloadFormat): self
    {
        $this->initialized['payloadFormat'] = true;
        $this->payloadFormat = $payloadFormat;

        return $this;
    }
}
