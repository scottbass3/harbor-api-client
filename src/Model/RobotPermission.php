<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace Scottbass3\Harbor\Api\Model;

class RobotPermission
{
    /**
     * @var array
     */
    protected $initialized = [];

    public function isInitialized($property): bool
    {
        return array_key_exists($property, $this->initialized);
    }
    /**
     * The kind of the permission.
     *
     * @var string|null
     */
    protected $kind;
    /**
     * The namespace of the permission.
     *
     * @var string|null
     */
    protected $namespace;
    /**
     * @var list<Access>|null
     */
    protected $access;

    /**
     * The kind of the permission.
     */
    public function getKind(): ?string
    {
        return $this->kind;
    }

    /**
     * The kind of the permission.
     */
    public function setKind(?string $kind): self
    {
        $this->initialized['kind'] = true;
        $this->kind = $kind;

        return $this;
    }

    /**
     * The namespace of the permission.
     */
    public function getNamespace(): ?string
    {
        return $this->namespace;
    }

    /**
     * The namespace of the permission.
     */
    public function setNamespace(?string $namespace): self
    {
        $this->initialized['namespace'] = true;
        $this->namespace = $namespace;

        return $this;
    }

    /**
     * @return list<Access>|null
     */
    public function getAccess(): ?array
    {
        return $this->access;
    }

    /**
     * @param list<Access>|null $access
     */
    public function setAccess(?array $access): self
    {
        $this->initialized['access'] = true;
        $this->access = $access;

        return $this;
    }
}
