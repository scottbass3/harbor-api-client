<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace Scottbass3\Harbor\Api\Model;

class Label
{
    /**
     * @var array
     */
    protected $initialized = [];

    public function isInitialized($property): bool
    {
        return array_key_exists($property, $this->initialized);
    }
    /**
     * The ID of the label.
     *
     * @var int|null
     */
    protected $id;
    /**
     * The name the label.
     *
     * @var string|null
     */
    protected $name;
    /**
     * The description the label.
     *
     * @var string|null
     */
    protected $description;
    /**
     * The color the label.
     *
     * @var string|null
     */
    protected $color;
    /**
     * The scope the label.
     *
     * @var string|null
     */
    protected $scope;
    /**
     * The ID of project that the label belongs to.
     *
     * @var int|null
     */
    protected $projectId;
    /**
     * The creation time the label.
     *
     * @var \DateTimeInterface|null
     */
    protected $creationTime;
    /**
     * The update time of the label.
     *
     * @var \DateTimeInterface|null
     */
    protected $updateTime;

    /**
     * The ID of the label.
     */
    public function getId(): ?int
    {
        return $this->id;
    }

    /**
     * The ID of the label.
     */
    public function setId(?int $id): self
    {
        $this->initialized['id'] = true;
        $this->id = $id;

        return $this;
    }

    /**
     * The name the label.
     */
    public function getName(): ?string
    {
        return $this->name;
    }

    /**
     * The name the label.
     */
    public function setName(?string $name): self
    {
        $this->initialized['name'] = true;
        $this->name = $name;

        return $this;
    }

    /**
     * The description the label.
     */
    public function getDescription(): ?string
    {
        return $this->description;
    }

    /**
     * The description the label.
     */
    public function setDescription(?string $description): self
    {
        $this->initialized['description'] = true;
        $this->description = $description;

        return $this;
    }

    /**
     * The color the label.
     */
    public function getColor(): ?string
    {
        return $this->color;
    }

    /**
     * The color the label.
     */
    public function setColor(?string $color): self
    {
        $this->initialized['color'] = true;
        $this->color = $color;

        return $this;
    }

    /**
     * The scope the label.
     */
    public function getScope(): ?string
    {
        return $this->scope;
    }

    /**
     * The scope the label.
     */
    public function setScope(?string $scope): self
    {
        $this->initialized['scope'] = true;
        $this->scope = $scope;

        return $this;
    }

    /**
     * The ID of project that the label belongs to.
     */
    public function getProjectId(): ?int
    {
        return $this->projectId;
    }

    /**
     * The ID of project that the label belongs to.
     */
    public function setProjectId(?int $projectId): self
    {
        $this->initialized['projectId'] = true;
        $this->projectId = $projectId;

        return $this;
    }

    /**
     * The creation time the label.
     */
    public function getCreationTime(): ?\DateTimeInterface
    {
        return $this->creationTime;
    }

    /**
     * The creation time the label.
     */
    public function setCreationTime(?\DateTimeInterface $creationTime): self
    {
        $this->initialized['creationTime'] = true;
        $this->creationTime = $creationTime;

        return $this;
    }

    /**
     * The update time of the label.
     */
    public function getUpdateTime(): ?\DateTimeInterface
    {
        return $this->updateTime;
    }

    /**
     * The update time of the label.
     */
    public function setUpdateTime(?\DateTimeInterface $updateTime): self
    {
        $this->initialized['updateTime'] = true;
        $this->updateTime = $updateTime;

        return $this;
    }
}
