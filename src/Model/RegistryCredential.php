<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace Scottbass3\Harbor\Api\Model;

class RegistryCredential
{
    /**
     * @var array
     */
    protected $initialized = [];

    public function isInitialized($property): bool
    {
        return array_key_exists($property, $this->initialized);
    }
    /**
     * Credential type, such as 'basic', 'oauth'.
     *
     * @var string|null
     */
    protected $type;
    /**
     * Access key, e.g. user name when credential type is 'basic'.
     *
     * @var string|null
     */
    protected $accessKey;
    /**
     * Access secret, e.g. password when credential type is 'basic'.
     *
     * @var string|null
     */
    protected $accessSecret;

    /**
     * Credential type, such as 'basic', 'oauth'.
     */
    public function getType(): ?string
    {
        return $this->type;
    }

    /**
     * Credential type, such as 'basic', 'oauth'.
     */
    public function setType(?string $type): self
    {
        $this->initialized['type'] = true;
        $this->type = $type;

        return $this;
    }

    /**
     * Access key, e.g. user name when credential type is 'basic'.
     */
    public function getAccessKey(): ?string
    {
        return $this->accessKey;
    }

    /**
     * Access key, e.g. user name when credential type is 'basic'.
     */
    public function setAccessKey(?string $accessKey): self
    {
        $this->initialized['accessKey'] = true;
        $this->accessKey = $accessKey;

        return $this;
    }

    /**
     * Access secret, e.g. password when credential type is 'basic'.
     */
    public function getAccessSecret(): ?string
    {
        return $this->accessSecret;
    }

    /**
     * Access secret, e.g. password when credential type is 'basic'.
     */
    public function setAccessSecret(?string $accessSecret): self
    {
        $this->initialized['accessSecret'] = true;
        $this->accessSecret = $accessSecret;

        return $this;
    }
}
