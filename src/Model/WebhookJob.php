<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace Scottbass3\Harbor\Api\Model;

class WebhookJob
{
    /**
     * @var array
     */
    protected $initialized = [];

    public function isInitialized($property): bool
    {
        return array_key_exists($property, $this->initialized);
    }
    /**
     * The webhook job ID.
     *
     * @var int|null
     */
    protected $id;
    /**
     * The webhook policy ID.
     *
     * @var int|null
     */
    protected $policyId;
    /**
     * The webhook job event type.
     *
     * @var string|null
     */
    protected $eventType;
    /**
     * The webhook job notify type.
     *
     * @var string|null
     */
    protected $notifyType;
    /**
     * The webhook job status.
     *
     * @var string|null
     */
    protected $status;
    /**
     * The webhook job notify detailed data.
     *
     * @var string|null
     */
    protected $jobDetail;
    /**
     * The webhook job creation time.
     *
     * @var \DateTimeInterface|null
     */
    protected $creationTime;
    /**
     * The webhook job update time.
     *
     * @var \DateTimeInterface|null
     */
    protected $updateTime;

    /**
     * The webhook job ID.
     */
    public function getId(): ?int
    {
        return $this->id;
    }

    /**
     * The webhook job ID.
     */
    public function setId(?int $id): self
    {
        $this->initialized['id'] = true;
        $this->id = $id;

        return $this;
    }

    /**
     * The webhook policy ID.
     */
    public function getPolicyId(): ?int
    {
        return $this->policyId;
    }

    /**
     * The webhook policy ID.
     */
    public function setPolicyId(?int $policyId): self
    {
        $this->initialized['policyId'] = true;
        $this->policyId = $policyId;

        return $this;
    }

    /**
     * The webhook job event type.
     */
    public function getEventType(): ?string
    {
        return $this->eventType;
    }

    /**
     * The webhook job event type.
     */
    public function setEventType(?string $eventType): self
    {
        $this->initialized['eventType'] = true;
        $this->eventType = $eventType;

        return $this;
    }

    /**
     * The webhook job notify type.
     */
    public function getNotifyType(): ?string
    {
        return $this->notifyType;
    }

    /**
     * The webhook job notify type.
     */
    public function setNotifyType(?string $notifyType): self
    {
        $this->initialized['notifyType'] = true;
        $this->notifyType = $notifyType;

        return $this;
    }

    /**
     * The webhook job status.
     */
    public function getStatus(): ?string
    {
        return $this->status;
    }

    /**
     * The webhook job status.
     */
    public function setStatus(?string $status): self
    {
        $this->initialized['status'] = true;
        $this->status = $status;

        return $this;
    }

    /**
     * The webhook job notify detailed data.
     */
    public function getJobDetail(): ?string
    {
        return $this->jobDetail;
    }

    /**
     * The webhook job notify detailed data.
     */
    public function setJobDetail(?string $jobDetail): self
    {
        $this->initialized['jobDetail'] = true;
        $this->jobDetail = $jobDetail;

        return $this;
    }

    /**
     * The webhook job creation time.
     */
    public function getCreationTime(): ?\DateTimeInterface
    {
        return $this->creationTime;
    }

    /**
     * The webhook job creation time.
     */
    public function setCreationTime(?\DateTimeInterface $creationTime): self
    {
        $this->initialized['creationTime'] = true;
        $this->creationTime = $creationTime;

        return $this;
    }

    /**
     * The webhook job update time.
     */
    public function getUpdateTime(): ?\DateTimeInterface
    {
        return $this->updateTime;
    }

    /**
     * The webhook job update time.
     */
    public function setUpdateTime(?\DateTimeInterface $updateTime): self
    {
        $this->initialized['updateTime'] = true;
        $this->updateTime = $updateTime;

        return $this;
    }
}
