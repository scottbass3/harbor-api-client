<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace Flownative\Harbor\Api\Model;

class ProjectSummary
{
    /**
     * @var array
     */
    protected $initialized = [];

    public function isInitialized($property): bool
    {
        return array_key_exists($property, $this->initialized);
    }
    /**
     * The number of the repositories under this project.
     *
     * @var int|null
     */
    protected $repoCount;
    /**
     * The total number of project admin members.
     *
     * @var int|null
     */
    protected $projectAdminCount;
    /**
     * The total number of maintainer members.
     *
     * @var int|null
     */
    protected $maintainerCount;
    /**
     * The total number of developer members.
     *
     * @var int|null
     */
    protected $developerCount;
    /**
     * The total number of guest members.
     *
     * @var int|null
     */
    protected $guestCount;
    /**
     * The total number of limited guest members.
     *
     * @var int|null
     */
    protected $limitedGuestCount;
    /**
     * @var ProjectSummaryQuota|null
     */
    protected $quota;
    /**
     * @var Registry|null
     */
    protected $registry;

    /**
     * The number of the repositories under this project.
     */
    public function getRepoCount(): ?int
    {
        return $this->repoCount;
    }

    /**
     * The number of the repositories under this project.
     */
    public function setRepoCount(?int $repoCount): self
    {
        $this->initialized['repoCount'] = true;
        $this->repoCount = $repoCount;

        return $this;
    }

    /**
     * The total number of project admin members.
     */
    public function getProjectAdminCount(): ?int
    {
        return $this->projectAdminCount;
    }

    /**
     * The total number of project admin members.
     */
    public function setProjectAdminCount(?int $projectAdminCount): self
    {
        $this->initialized['projectAdminCount'] = true;
        $this->projectAdminCount = $projectAdminCount;

        return $this;
    }

    /**
     * The total number of maintainer members.
     */
    public function getMaintainerCount(): ?int
    {
        return $this->maintainerCount;
    }

    /**
     * The total number of maintainer members.
     */
    public function setMaintainerCount(?int $maintainerCount): self
    {
        $this->initialized['maintainerCount'] = true;
        $this->maintainerCount = $maintainerCount;

        return $this;
    }

    /**
     * The total number of developer members.
     */
    public function getDeveloperCount(): ?int
    {
        return $this->developerCount;
    }

    /**
     * The total number of developer members.
     */
    public function setDeveloperCount(?int $developerCount): self
    {
        $this->initialized['developerCount'] = true;
        $this->developerCount = $developerCount;

        return $this;
    }

    /**
     * The total number of guest members.
     */
    public function getGuestCount(): ?int
    {
        return $this->guestCount;
    }

    /**
     * The total number of guest members.
     */
    public function setGuestCount(?int $guestCount): self
    {
        $this->initialized['guestCount'] = true;
        $this->guestCount = $guestCount;

        return $this;
    }

    /**
     * The total number of limited guest members.
     */
    public function getLimitedGuestCount(): ?int
    {
        return $this->limitedGuestCount;
    }

    /**
     * The total number of limited guest members.
     */
    public function setLimitedGuestCount(?int $limitedGuestCount): self
    {
        $this->initialized['limitedGuestCount'] = true;
        $this->limitedGuestCount = $limitedGuestCount;

        return $this;
    }

    public function getQuota(): ?ProjectSummaryQuota
    {
        return $this->quota;
    }

    public function setQuota(?ProjectSummaryQuota $quota): self
    {
        $this->initialized['quota'] = true;
        $this->quota = $quota;

        return $this;
    }

    public function getRegistry(): ?Registry
    {
        return $this->registry;
    }

    public function setRegistry(?Registry $registry): self
    {
        $this->initialized['registry'] = true;
        $this->registry = $registry;

        return $this;
    }
}
