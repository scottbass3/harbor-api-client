<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace Flownative\Harbor\Api\Model;

class RetentionMetadata
{
    /**
     * @var array
     */
    protected $initialized = [];

    public function isInitialized($property): bool
    {
        return array_key_exists($property, $this->initialized);
    }
    /**
     * templates.
     *
     * @var list<RetentionRuleMetadata>|null
     */
    protected $templates;
    /**
     * supported scope selectors.
     *
     * @var list<RetentionSelectorMetadata>|null
     */
    protected $scopeSelectors;
    /**
     * supported tag selectors.
     *
     * @var list<RetentionSelectorMetadata>|null
     */
    protected $tagSelectors;

    /**
     * templates.
     *
     * @return list<RetentionRuleMetadata>|null
     */
    public function getTemplates(): ?array
    {
        return $this->templates;
    }

    /**
     * templates.
     *
     * @param list<RetentionRuleMetadata>|null $templates
     */
    public function setTemplates(?array $templates): self
    {
        $this->initialized['templates'] = true;
        $this->templates = $templates;

        return $this;
    }

    /**
     * supported scope selectors.
     *
     * @return list<RetentionSelectorMetadata>|null
     */
    public function getScopeSelectors(): ?array
    {
        return $this->scopeSelectors;
    }

    /**
     * supported scope selectors.
     *
     * @param list<RetentionSelectorMetadata>|null $scopeSelectors
     */
    public function setScopeSelectors(?array $scopeSelectors): self
    {
        $this->initialized['scopeSelectors'] = true;
        $this->scopeSelectors = $scopeSelectors;

        return $this;
    }

    /**
     * supported tag selectors.
     *
     * @return list<RetentionSelectorMetadata>|null
     */
    public function getTagSelectors(): ?array
    {
        return $this->tagSelectors;
    }

    /**
     * supported tag selectors.
     *
     * @param list<RetentionSelectorMetadata>|null $tagSelectors
     */
    public function setTagSelectors(?array $tagSelectors): self
    {
        $this->initialized['tagSelectors'] = true;
        $this->tagSelectors = $tagSelectors;

        return $this;
    }
}
