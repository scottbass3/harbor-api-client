<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace Scottbass3\Harbor\Api\Model;

class Worker
{
    /**
     * @var array
     */
    protected $initialized = [];

    public function isInitialized($property): bool
    {
        return array_key_exists($property, $this->initialized);
    }
    /**
     * the id of the worker.
     *
     * @var string|null
     */
    protected $id;
    /**
     * the id of the worker pool.
     *
     * @var string|null
     */
    protected $poolId;
    /**
     * the name of the running job in the worker.
     *
     * @var string|null
     */
    protected $jobName;
    /**
     * the id of the running job in the worker.
     *
     * @var string|null
     */
    protected $jobId;
    /**
     * The start time of the worker.
     *
     * @var \DateTimeInterface|null
     */
    protected $startAt;
    /**
     * the checkin of the running job in the worker.
     *
     * @var string|null
     */
    protected $checkIn;
    /**
     * The checkin time of the worker.
     *
     * @var \DateTimeInterface|null
     */
    protected $checkinAt;

    /**
     * the id of the worker.
     */
    public function getId(): ?string
    {
        return $this->id;
    }

    /**
     * the id of the worker.
     */
    public function setId(?string $id): self
    {
        $this->initialized['id'] = true;
        $this->id = $id;

        return $this;
    }

    /**
     * the id of the worker pool.
     */
    public function getPoolId(): ?string
    {
        return $this->poolId;
    }

    /**
     * the id of the worker pool.
     */
    public function setPoolId(?string $poolId): self
    {
        $this->initialized['poolId'] = true;
        $this->poolId = $poolId;

        return $this;
    }

    /**
     * the name of the running job in the worker.
     */
    public function getJobName(): ?string
    {
        return $this->jobName;
    }

    /**
     * the name of the running job in the worker.
     */
    public function setJobName(?string $jobName): self
    {
        $this->initialized['jobName'] = true;
        $this->jobName = $jobName;

        return $this;
    }

    /**
     * the id of the running job in the worker.
     */
    public function getJobId(): ?string
    {
        return $this->jobId;
    }

    /**
     * the id of the running job in the worker.
     */
    public function setJobId(?string $jobId): self
    {
        $this->initialized['jobId'] = true;
        $this->jobId = $jobId;

        return $this;
    }

    /**
     * The start time of the worker.
     */
    public function getStartAt(): ?\DateTimeInterface
    {
        return $this->startAt;
    }

    /**
     * The start time of the worker.
     */
    public function setStartAt(?\DateTimeInterface $startAt): self
    {
        $this->initialized['startAt'] = true;
        $this->startAt = $startAt;

        return $this;
    }

    /**
     * the checkin of the running job in the worker.
     */
    public function getCheckIn(): ?string
    {
        return $this->checkIn;
    }

    /**
     * the checkin of the running job in the worker.
     */
    public function setCheckIn(?string $checkIn): self
    {
        $this->initialized['checkIn'] = true;
        $this->checkIn = $checkIn;

        return $this;
    }

    /**
     * The checkin time of the worker.
     */
    public function getCheckinAt(): ?\DateTimeInterface
    {
        return $this->checkinAt;
    }

    /**
     * The checkin time of the worker.
     */
    public function setCheckinAt(?\DateTimeInterface $checkinAt): self
    {
        $this->initialized['checkinAt'] = true;
        $this->checkinAt = $checkinAt;

        return $this;
    }
}
