<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace Flownative\Harbor\Api\Model;

class SecuritySummary
{
    /**
     * @var array
     */
    protected $initialized = [];

    public function isInitialized($property): bool
    {
        return array_key_exists($property, $this->initialized);
    }
    /**
     * the count of critical vulnerabilities.
     *
     * @var int|null
     */
    protected $criticalCnt;
    /**
     * the count of high vulnerabilities.
     *
     * @var int|null
     */
    protected $highCnt;
    /**
     * the count of medium vulnerabilities.
     *
     * @var int|null
     */
    protected $mediumCnt;
    /**
     * the count of low vulnerabilities.
     *
     * @var int|null
     */
    protected $lowCnt;
    /**
     * the count of none vulnerabilities.
     *
     * @var int|null
     */
    protected $noneCnt;
    /**
     * the count of unknown vulnerabilities.
     *
     * @var int|null
     */
    protected $unknownCnt;
    /**
     * the count of total vulnerabilities.
     *
     * @var int|null
     */
    protected $totalVuls;
    /**
     * the count of scanned artifacts.
     *
     * @var int|null
     */
    protected $scannedCnt;
    /**
     * the total count of artifacts.
     *
     * @var int|null
     */
    protected $totalArtifact;
    /**
     * the count of fixable vulnerabilities.
     *
     * @var int|null
     */
    protected $fixableCnt;
    /**
     * the list of dangerous CVEs.
     *
     * @var list<DangerousCVE>|null
     */
    protected $dangerousCves;
    /**
     * the list of dangerous artifacts.
     *
     * @var list<DangerousArtifact>|null
     */
    protected $dangerousArtifacts;

    /**
     * the count of critical vulnerabilities.
     */
    public function getCriticalCnt(): ?int
    {
        return $this->criticalCnt;
    }

    /**
     * the count of critical vulnerabilities.
     */
    public function setCriticalCnt(?int $criticalCnt): self
    {
        $this->initialized['criticalCnt'] = true;
        $this->criticalCnt = $criticalCnt;

        return $this;
    }

    /**
     * the count of high vulnerabilities.
     */
    public function getHighCnt(): ?int
    {
        return $this->highCnt;
    }

    /**
     * the count of high vulnerabilities.
     */
    public function setHighCnt(?int $highCnt): self
    {
        $this->initialized['highCnt'] = true;
        $this->highCnt = $highCnt;

        return $this;
    }

    /**
     * the count of medium vulnerabilities.
     */
    public function getMediumCnt(): ?int
    {
        return $this->mediumCnt;
    }

    /**
     * the count of medium vulnerabilities.
     */
    public function setMediumCnt(?int $mediumCnt): self
    {
        $this->initialized['mediumCnt'] = true;
        $this->mediumCnt = $mediumCnt;

        return $this;
    }

    /**
     * the count of low vulnerabilities.
     */
    public function getLowCnt(): ?int
    {
        return $this->lowCnt;
    }

    /**
     * the count of low vulnerabilities.
     */
    public function setLowCnt(?int $lowCnt): self
    {
        $this->initialized['lowCnt'] = true;
        $this->lowCnt = $lowCnt;

        return $this;
    }

    /**
     * the count of none vulnerabilities.
     */
    public function getNoneCnt(): ?int
    {
        return $this->noneCnt;
    }

    /**
     * the count of none vulnerabilities.
     */
    public function setNoneCnt(?int $noneCnt): self
    {
        $this->initialized['noneCnt'] = true;
        $this->noneCnt = $noneCnt;

        return $this;
    }

    /**
     * the count of unknown vulnerabilities.
     */
    public function getUnknownCnt(): ?int
    {
        return $this->unknownCnt;
    }

    /**
     * the count of unknown vulnerabilities.
     */
    public function setUnknownCnt(?int $unknownCnt): self
    {
        $this->initialized['unknownCnt'] = true;
        $this->unknownCnt = $unknownCnt;

        return $this;
    }

    /**
     * the count of total vulnerabilities.
     */
    public function getTotalVuls(): ?int
    {
        return $this->totalVuls;
    }

    /**
     * the count of total vulnerabilities.
     */
    public function setTotalVuls(?int $totalVuls): self
    {
        $this->initialized['totalVuls'] = true;
        $this->totalVuls = $totalVuls;

        return $this;
    }

    /**
     * the count of scanned artifacts.
     */
    public function getScannedCnt(): ?int
    {
        return $this->scannedCnt;
    }

    /**
     * the count of scanned artifacts.
     */
    public function setScannedCnt(?int $scannedCnt): self
    {
        $this->initialized['scannedCnt'] = true;
        $this->scannedCnt = $scannedCnt;

        return $this;
    }

    /**
     * the total count of artifacts.
     */
    public function getTotalArtifact(): ?int
    {
        return $this->totalArtifact;
    }

    /**
     * the total count of artifacts.
     */
    public function setTotalArtifact(?int $totalArtifact): self
    {
        $this->initialized['totalArtifact'] = true;
        $this->totalArtifact = $totalArtifact;

        return $this;
    }

    /**
     * the count of fixable vulnerabilities.
     */
    public function getFixableCnt(): ?int
    {
        return $this->fixableCnt;
    }

    /**
     * the count of fixable vulnerabilities.
     */
    public function setFixableCnt(?int $fixableCnt): self
    {
        $this->initialized['fixableCnt'] = true;
        $this->fixableCnt = $fixableCnt;

        return $this;
    }

    /**
     * the list of dangerous CVEs.
     *
     * @return list<DangerousCVE>|null
     */
    public function getDangerousCves(): ?array
    {
        return $this->dangerousCves;
    }

    /**
     * the list of dangerous CVEs.
     *
     * @param list<DangerousCVE>|null $dangerousCves
     */
    public function setDangerousCves(?array $dangerousCves): self
    {
        $this->initialized['dangerousCves'] = true;
        $this->dangerousCves = $dangerousCves;

        return $this;
    }

    /**
     * the list of dangerous artifacts.
     *
     * @return list<DangerousArtifact>|null
     */
    public function getDangerousArtifacts(): ?array
    {
        return $this->dangerousArtifacts;
    }

    /**
     * the list of dangerous artifacts.
     *
     * @param list<DangerousArtifact>|null $dangerousArtifacts
     */
    public function setDangerousArtifacts(?array $dangerousArtifacts): self
    {
        $this->initialized['dangerousArtifacts'] = true;
        $this->dangerousArtifacts = $dangerousArtifacts;

        return $this;
    }
}
