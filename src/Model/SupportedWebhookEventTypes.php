<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace Scottbass3\Harbor\Api\Model;

class SupportedWebhookEventTypes
{
    /**
     * @var array
     */
    protected $initialized = [];

    public function isInitialized($property): bool
    {
        return array_key_exists($property, $this->initialized);
    }
    /**
     * @var list<string>|null
     */
    protected $eventType;
    /**
     * @var list<string>|null
     */
    protected $notifyType;
    /**
     * @var list<PayloadFormat>|null
     */
    protected $payloadFormats;

    /**
     * @return list<string>|null
     */
    public function getEventType(): ?array
    {
        return $this->eventType;
    }

    /**
     * @param list<string>|null $eventType
     */
    public function setEventType(?array $eventType): self
    {
        $this->initialized['eventType'] = true;
        $this->eventType = $eventType;

        return $this;
    }

    /**
     * @return list<string>|null
     */
    public function getNotifyType(): ?array
    {
        return $this->notifyType;
    }

    /**
     * @param list<string>|null $notifyType
     */
    public function setNotifyType(?array $notifyType): self
    {
        $this->initialized['notifyType'] = true;
        $this->notifyType = $notifyType;

        return $this;
    }

    /**
     * @return list<PayloadFormat>|null
     */
    public function getPayloadFormats(): ?array
    {
        return $this->payloadFormats;
    }

    /**
     * @param list<PayloadFormat>|null $payloadFormats
     */
    public function setPayloadFormats(?array $payloadFormats): self
    {
        $this->initialized['payloadFormats'] = true;
        $this->payloadFormats = $payloadFormats;

        return $this;
    }
}
