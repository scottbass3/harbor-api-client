<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace Flownative\Harbor\Api\Model;

class Reference
{
    /**
     * @var array
     */
    protected $initialized = [];

    public function isInitialized($property): bool
    {
        return array_key_exists($property, $this->initialized);
    }
    /**
     * The parent ID of the reference.
     *
     * @var int|null
     */
    protected $parentId;
    /**
     * The child ID of the reference.
     *
     * @var int|null
     */
    protected $childId;
    /**
     * The digest of the child artifact.
     *
     * @var string|null
     */
    protected $childDigest;
    /**
     * @var Platform|null
     */
    protected $platform;
    /**
     * @var array<string, string>|null
     */
    protected $annotations;
    /**
     * The download URLs.
     *
     * @var list<string>|null
     */
    protected $urls;

    /**
     * The parent ID of the reference.
     */
    public function getParentId(): ?int
    {
        return $this->parentId;
    }

    /**
     * The parent ID of the reference.
     */
    public function setParentId(?int $parentId): self
    {
        $this->initialized['parentId'] = true;
        $this->parentId = $parentId;

        return $this;
    }

    /**
     * The child ID of the reference.
     */
    public function getChildId(): ?int
    {
        return $this->childId;
    }

    /**
     * The child ID of the reference.
     */
    public function setChildId(?int $childId): self
    {
        $this->initialized['childId'] = true;
        $this->childId = $childId;

        return $this;
    }

    /**
     * The digest of the child artifact.
     */
    public function getChildDigest(): ?string
    {
        return $this->childDigest;
    }

    /**
     * The digest of the child artifact.
     */
    public function setChildDigest(?string $childDigest): self
    {
        $this->initialized['childDigest'] = true;
        $this->childDigest = $childDigest;

        return $this;
    }

    public function getPlatform(): ?Platform
    {
        return $this->platform;
    }

    public function setPlatform(?Platform $platform): self
    {
        $this->initialized['platform'] = true;
        $this->platform = $platform;

        return $this;
    }

    /**
     * @return array<string, string>|null
     */
    public function getAnnotations(): ?iterable
    {
        return $this->annotations;
    }

    /**
     * @param array<string, string>|null $annotations
     */
    public function setAnnotations(?iterable $annotations): self
    {
        $this->initialized['annotations'] = true;
        $this->annotations = $annotations;

        return $this;
    }

    /**
     * The download URLs.
     *
     * @return list<string>|null
     */
    public function getUrls(): ?array
    {
        return $this->urls;
    }

    /**
     * The download URLs.
     *
     * @param list<string>|null $urls
     */
    public function setUrls(?array $urls): self
    {
        $this->initialized['urls'] = true;
        $this->urls = $urls;

        return $this;
    }
}
