<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace Flownative\Harbor\Api\Model;

class ScannerRegistrationSettings
{
    /**
     * @var array
     */
    protected $initialized = [];

    public function isInitialized($property): bool
    {
        return array_key_exists($property, $this->initialized);
    }
    /**
     * The name of this registration.
     *
     * @var string|null
     */
    protected $name;
    /**
     * A base URL of the scanner adapter.
     *
     * @var string|null
     */
    protected $url;
    /**
     * Specify what authentication approach is adopted for the HTTP communications.
     * Supported types Basic", "Bearer" and api key header "X-ScannerAdapter-API-Key".
     *
     * @var string|null
     */
    protected $auth = '';
    /**
     * An optional value of the HTTP Authorization header sent with each request to the Scanner Adapter API.
     *
     * @var string|null
     */
    protected $accessCredential;

    /**
     * The name of this registration.
     */
    public function getName(): ?string
    {
        return $this->name;
    }

    /**
     * The name of this registration.
     */
    public function setName(?string $name): self
    {
        $this->initialized['name'] = true;
        $this->name = $name;

        return $this;
    }

    /**
     * A base URL of the scanner adapter.
     */
    public function getUrl(): ?string
    {
        return $this->url;
    }

    /**
     * A base URL of the scanner adapter.
     */
    public function setUrl(?string $url): self
    {
        $this->initialized['url'] = true;
        $this->url = $url;

        return $this;
    }

    /**
     * Specify what authentication approach is adopted for the HTTP communications.
     * Supported types Basic", "Bearer" and api key header "X-ScannerAdapter-API-Key".
     */
    public function getAuth(): ?string
    {
        return $this->auth;
    }

    /**
     * Specify what authentication approach is adopted for the HTTP communications.
     * Supported types Basic", "Bearer" and api key header "X-ScannerAdapter-API-Key".
     */
    public function setAuth(?string $auth): self
    {
        $this->initialized['auth'] = true;
        $this->auth = $auth;

        return $this;
    }

    /**
     * An optional value of the HTTP Authorization header sent with each request to the Scanner Adapter API.
     */
    public function getAccessCredential(): ?string
    {
        return $this->accessCredential;
    }

    /**
     * An optional value of the HTTP Authorization header sent with each request to the Scanner Adapter API.
     */
    public function setAccessCredential(?string $accessCredential): self
    {
        $this->initialized['accessCredential'] = true;
        $this->accessCredential = $accessCredential;

        return $this;
    }
}
