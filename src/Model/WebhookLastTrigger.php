<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace Flownative\Harbor\Api\Model;

class WebhookLastTrigger
{
    /**
     * @var array
     */
    protected $initialized = [];

    public function isInitialized($property): bool
    {
        return array_key_exists($property, $this->initialized);
    }
    /**
     * The webhook policy name.
     *
     * @var string|null
     */
    protected $policyName;
    /**
     * The webhook event type.
     *
     * @var string|null
     */
    protected $eventType;
    /**
     * Whether or not the webhook policy enabled.
     *
     * @var bool|null
     */
    protected $enabled;
    /**
     * The creation time of webhook policy.
     *
     * @var \DateTimeInterface|null
     */
    protected $creationTime;
    /**
     * The last trigger time of webhook policy.
     *
     * @var \DateTimeInterface|null
     */
    protected $lastTriggerTime;

    /**
     * The webhook policy name.
     */
    public function getPolicyName(): ?string
    {
        return $this->policyName;
    }

    /**
     * The webhook policy name.
     */
    public function setPolicyName(?string $policyName): self
    {
        $this->initialized['policyName'] = true;
        $this->policyName = $policyName;

        return $this;
    }

    /**
     * The webhook event type.
     */
    public function getEventType(): ?string
    {
        return $this->eventType;
    }

    /**
     * The webhook event type.
     */
    public function setEventType(?string $eventType): self
    {
        $this->initialized['eventType'] = true;
        $this->eventType = $eventType;

        return $this;
    }

    /**
     * Whether or not the webhook policy enabled.
     */
    public function getEnabled(): ?bool
    {
        return $this->enabled;
    }

    /**
     * Whether or not the webhook policy enabled.
     */
    public function setEnabled(?bool $enabled): self
    {
        $this->initialized['enabled'] = true;
        $this->enabled = $enabled;

        return $this;
    }

    /**
     * The creation time of webhook policy.
     */
    public function getCreationTime(): ?\DateTimeInterface
    {
        return $this->creationTime;
    }

    /**
     * The creation time of webhook policy.
     */
    public function setCreationTime(?\DateTimeInterface $creationTime): self
    {
        $this->initialized['creationTime'] = true;
        $this->creationTime = $creationTime;

        return $this;
    }

    /**
     * The last trigger time of webhook policy.
     */
    public function getLastTriggerTime(): ?\DateTimeInterface
    {
        return $this->lastTriggerTime;
    }

    /**
     * The last trigger time of webhook policy.
     */
    public function setLastTriggerTime(?\DateTimeInterface $lastTriggerTime): self
    {
        $this->initialized['lastTriggerTime'] = true;
        $this->lastTriggerTime = $lastTriggerTime;

        return $this;
    }
}
